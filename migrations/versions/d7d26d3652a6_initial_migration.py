"""Initial migration

Revision ID: d7d26d3652a6
Revises: 
Create Date: 2025-07-29 05:55:05.551459

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd7d26d3652a6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('flag_emoji', sa.String(length=10), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('currency_code', sa.String(length=3), nullable=True),
    sa.Column('currency_name', sa.String(length=50), nullable=True),
    sa.Column('gdp_per_capita', sa.Float(), nullable=True),
    sa.Column('visa_required', sa.Boolean(), nullable=True),
    sa.Column('visa_types', sa.Text(), nullable=True),
    sa.Column('processing_time_days', sa.Integer(), nullable=True),
    sa.Column('application_fee_usd', sa.Float(), nullable=True),
    sa.Column('policies_last_updated', sa.DateTime(), nullable=True),
    sa.Column('data_source', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_countries_code'), 'countries', ['code'], unique=True)
    op.create_index(op.f('ix_countries_id'), 'countries', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('marital_status', sa.String(length=50), nullable=True),
    sa.Column('profession', sa.String(length=200), nullable=True),
    sa.Column('dependents', sa.Integer(), nullable=True),
    sa.Column('origin_country_code', sa.String(length=3), nullable=True),
    sa.Column('destination_country_code', sa.String(length=3), nullable=True),
    sa.Column('reason_for_moving', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('checklists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('origin_country_code', sa.String(length=3), nullable=False),
    sa.Column('destination_country_code', sa.String(length=3), nullable=False),
    sa.Column('reason_for_moving', sa.String(length=200), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'IN_PROGRESS', 'COMPLETED', 'ARCHIVED', name='checkliststatus'), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_checklists_id'), 'checklists', ['id'], unique=False)
    op.create_table('policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_code', sa.String(length=3), nullable=False),
    sa.Column('policy_type', sa.Enum('VISA_REQUIREMENT', 'DOCUMENT_REQUIREMENT', 'HEALTH_REQUIREMENT', 'FINANCIAL_REQUIREMENT', 'BACKGROUND_CHECK', 'LANGUAGE_REQUIREMENT', 'EDUCATION_REQUIREMENT', 'WORK_PERMIT', 'RESIDENCE_PERMIT', 'CITIZENSHIP', 'OTHER', name='policytype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('processing_time_days', sa.Integer(), nullable=True),
    sa.Column('application_fee_usd', sa.Integer(), nullable=True),
    sa.Column('validity_period_days', sa.Integer(), nullable=True),
    sa.Column('eligibility_criteria', sa.Text(), nullable=True),
    sa.Column('required_documents', sa.Text(), nullable=True),
    sa.Column('restrictions', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'EXPIRED', name='policystatus'), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('source_url', sa.String(length=500), nullable=True),
    sa.Column('source_name', sa.String(length=200), nullable=True),
    sa.Column('last_verified', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('is_mandatory', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_code'], ['countries.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_policies_id'), 'policies', ['id'], unique=False)
    op.create_table('checklist_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checklist_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('PRE_DEPARTURE', 'ARRIVAL', 'SETUP', 'LEGAL', 'FINANCIAL', 'HEALTH', 'EDUCATION', 'HOUSING', 'TRANSPORTATION', 'OTHER', name='checklistcategory'), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=True),
    sa.Column('estimated_duration_days', sa.Integer(), nullable=True),
    sa.Column('cost_estimate', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['checklist_id'], ['checklists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_checklist_items_id'), 'checklist_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_checklist_items_id'), table_name='checklist_items')
    op.drop_table('checklist_items')
    op.drop_index(op.f('ix_policies_id'), table_name='policies')
    op.drop_table('policies')
    op.drop_index(op.f('ix_checklists_id'), table_name='checklists')
    op.drop_table('checklists')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_countries_id'), table_name='countries')
    op.drop_index(op.f('ix_countries_code'), table_name='countries')
    op.drop_table('countries')
    # ### end Alembic commands ###
